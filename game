import pygame
import random
import copy
import mysql.connector as mc

my = mc.connect(host="localhost", user="root", password='Pdpv&1325', database="blocks")
cur = my.cursor(buffered=True)
from sys import exit
width,height=250,500
grid=25
pygame.init()
win=pygame.display.set_mode((width,height))
win2=pygame.display.set_mode((width,height))
font = pygame.font.Font(None, 30)
speed=120
speed2=450
RED = (255, 0, 0)
GRAY = (0,0,0)
ml=[]
phy = False
x1=0
y1=0
r=0
sc=0
user_text=''

def lb(lbl):
    if len(lbl)>=5:
        ll= lbl[:5]
    else:
        ll=lbl
    cou=1
    lev=100
    for i in ll:

        ra1 = font.render(str(cou), True, (1, 1, 200))
        ra2=font.render(str(i[0]),True,(1,1,200))
        ra3 = font.render(str(i[1]), True, (1, 1, 200))
        po1 = ra1.get_rect(center=(50, lev))
        po2 = ra2.get_rect(center=(125, lev))
        po3 = ra3.get_rect(center=(200, lev))
        win2.blit(ra1, po1)
        win2.blit(ra2, po2)
        win2.blit(ra3, po3)
        cou+=1
        lev+=20

def over():
    for i in range(100):
        if [i,0] in ml:
            return True


def score():
    scoresur=font.render('Score:'+str(sc),True,(1,1,200))
    scorerect=scoresur.get_rect(center= (60,40))
    win.blit(scoresur,scorerect)
    pygame.display.flip()

def newblock(l1):
    win.fill(GRAY)
    for i in l1:
        pygame.draw.rect(win, RED, (i[0] * grid, (i[1] ) * grid, grid, grid))
    for i in ml:
        pygame.draw.rect(win, RED, (i[0] * grid, (i[1] ) * grid, grid, grid))
    return True
def rot(r):
    if r==3:
        r=0
    else:
        r=r+1
    return r

def clearck(b):
    c=False
    for i in range(20):
        for j in range(10):
            if [j,i] in b:
                c=True
            else:
                c=False
                break
        if c==True:
            break
    if c:
        global sc
        sc=sc+5
        u=[]
        for k in b:
            if k[1]==i:
               u.append(k)
        for k in u:
            b.remove(k)
        for k in b:
            if k[1]<i:
                k[1]+=1

def xmove(l1,n,x1,ml):
    x=False
    if n==1:
        for i in range(len(l1)):
            if [l1[i][0]+1,l1[i][1]] in ml or l1[i][0]+1==10:
                x=False
                break
        else:
                x=True


    elif n==-1:
        for i in range(len(l1)):
            if [l1[i][0]-1,l1[i][1]] in ml or l1[i][0]-1==-1:
                x=False
                break
        else:
                x=True

    else:
           pass

    if x:
        x1 += n
        for i in l1:
            i[0] += x1
        return x1
def move(z,b,y1):
    x=False
    for i in range(len(z)):
        if [z[i][0],z[i][1]+1] in b or z[i][1]*grid>=height-grid:
            x=True
            break
        else:
            x=False
    if x:
        global ml
        global phy
        ml=b+z
        l1,z=[],[]
        phy=False

    else:
        win.fill(GRAY)
        y1+=1
        for i in range(len(z)):
            z[i][1]+=y1
            pygame.draw.rect(win, RED, (z[i][0] * grid, z[i][1]* grid, grid, grid))
        for i in b:
            pygame.draw.rect(win, RED, (i[0] * grid, i[1]* grid, grid, grid))
    return y1

def main():
    score()
    global phy
    clock=pygame.time.Clock()
    run=True
    while run:
        score()
        clock.tick(speed)
        pygame.time.wait(speed2)
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                run=False
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_RIGHT:
                    xmove(l1, 1,x1,ml)
                if event.key == pygame.K_LEFT:
                    xmove(l1,-1,x1,ml)
                if event.key == pygame.K_UP:
                    r=rot(r)
                    l1 = lo[r]
                if event.key == pygame.K_DOWN:
                    move(l1,ml,y1)


        win.fill(GRAY)
        clearck(ml)

        if phy==False:
            r=0
            lo=copy.deepcopy(l)
            lo=random.choice(lo)
            l1=lo[r]
        if phy:
            l1=lo[r]

            move(l1,ml,y1)
        else:
            l1=lo[r]

            phy=newblock(l1)
            move(l1,ml,y1)

        pygame.display.flip()
        score()
        if over():
            run=False
            pygame.display.flip()
    run2=True
    run=False
    user_text = ''

    while run2:
        win.fill(GRAY)
        lead = font.render('Enter name:', True, (1, 1, 200))
        board = lead.get_rect(center=(80, 40))
        win2.blit(lead, board)
        name = font.render(user_text, True, (1, 1, 200))
        board2 = lead.get_rect(center=(80, 100))
        win2.blit(name, board2)
        pygame.display.flip()

        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                run2=False
            if event.type == pygame.KEYDOWN:

                if event.key == pygame.K_BACKSPACE:

                    user_text = user_text[:-1]

                elif event.key==pygame.K_RETURN:
                    run2=False
                else:
                    user_text += event.unicode
    run3=True
    global sc
    nr = (user_text, sc)
    cur.execute("insert into leaderboard values" + str(nr))
    cur.execute("select * from leaderboard order by score desc")
    my.commit()
    lbl=cur.fetchall()
    while run3:
        win2.fill(GRAY)
        lead = font.render('Leaderboard:', True, (1, 1, 200))
        board = lead.get_rect(center=(80, 40))
        win2.blit(lead, board)

        ra1 = font.render('Rank     Name     Score', True, (1, 1, 200))
        po1 = lead.get_rect(center=(80, 80))
        win2.blit(ra1, po1)
        lb(lbl)
        pygame.display.flip()
        for event in pygame.event.get():
            if event.type==pygame.QUIT:
                run3=False



l=['Square','Orange_L','Blue_L','Purple_block','Green_block','Red_block','Line']
lb2=[]
lb3=[]
lb4=[]
for i in l:
    cur.execute("select * from "+i)
    c=0
    for j in cur.fetchall():
        lb1=[j[1],j[2]]
        lb2.append(lb1)
        c+=1
        if c==4:
            lb3.append(lb2)
            lb2=[]
            c=0
    lb4.append(lb3)
    lb3=[]
l=lb4
main()

